$(function() {
    "use strict";
    $(function() {
        $(".preloader").fadeOut();
    }), jQuery(document).on("click", ".mega-dropdown", function(e) {
        e.stopPropagation();
    });
    var set = function() {
        (window.innerWidth > 0 ? window.innerWidth : this.screen.width) < 1500 ? ($("body").addClass("mini-sidebar"), 
            $(".navbar-brand span").show(), $(".sidebartoggler i").addClass("ti-menu")) : ($("body").removeClass("mini-sidebar"), 
            $(".navbar-brand span").hide());
            var height = (window.innerHeight > 0 ? window.innerHeight : this.screen.height) - 1;
            (height -= 0) < 1 && (height = 1), height > 0 && $(".page-wrapper").css("min-height", height + "px");
        };
        $(window).ready(set), $(window).on("resize", set), $(".sidebartoggler").on("click", function() {
            $("body").hasClass("mini-sidebar") ? ($("body").trigger("resize"), $("body").removeClass("mini-sidebar"), 
                $(".navbar-brand span").show()) : ($("body").trigger("resize"), $("body").addClass("mini-sidebar"), 
                $(".navbar-brand span").hide());
            }), $(".nav-toggler").click(function() {
                $("body").toggleClass("show-sidebar"), $(".nav-toggler i").toggleClass("ti-menu"), 
                $(".nav-toggler i").addClass("ti-close");
            }), $(".search-box a, .search-box .app-search .srh-btn").on("click", function() {
                $(".app-search").toggle(200);
            }), $(".right-side-toggle").click(function() {
                $(".right-sidebar").slideDown(50), $(".right-sidebar").toggleClass("shw-rside");
            }), $(".floating-labels .form-control").on("focus blur", function(e) {
                $(this).parents(".form-group").toggleClass("focused", "focus" === e.type || this.value.length > 0);
            }).trigger("blur"), $(function() {
                for (var url = window.location, element = $("ul#sidebarnav a").filter(function() {
                    return this.href == url;
                }).addClass("active").parent().addClass("active"); ;) {
                    if (!element.is("li")) break;
                    element = element.parent().addClass("in").parent().addClass("active");
                }
            }), $(function() {
                $('[data-toggle="tooltip"]').tooltip();
            }), $(function() {
                $('[data-toggle="popover"]').popover();
            }), $(function() {
                $("#sidebarnav").AdminMenu();
            }), $(".scroll-sidebar, .right-side-panel, .message-center, .right-sidebar").perfectScrollbar(), 
            $("body").trigger("resize"), $(".list-task li label").click(function() {
                $(this).toggleClass("task-done");
            }), $('a[data-action="collapse"]').on("click", function(e) {
                e.preventDefault(), $(this).closest(".card").find('[data-action="collapse"] i').toggleClass("ti-minus ti-plus"), 
                $(this).closest(".card").children(".card-body").collapse("toggle");
            }), $('a[data-action="expand"]').on("click", function(e) {
                e.preventDefault(), $(this).closest(".card").find('[data-action="expand"] i').toggleClass("mdi-arrow-expand mdi-arrow-compress"), 
                $(this).closest(".card").toggleClass("card-fullscreen");
            }), $('a[data-action="close"]').on("click", function() {
                $(this).closest(".card").removeClass().slideUp("fast");
            });
        });

$(".sidebartoggler").on("click", function() {
    if ($('.dark-logo[alt="logo"]').hasClass("d-none")) {
        $('.dark-logo[alt="logo"]').removeClass('d-none');
    } else {
        $('.dark-logo[alt="logo"]').addClass('d-none');
    }
});

$(document).ready(function() {
    //Validación para introducir solo números
    $('.number').keypress(function() {
        return event.charCode >= 48 && event.charCode <= 57;
    });
    //Validación para introducir solo letras y espacios
    $('#name, #lastname').keypress(function() {
        return event.charCode >= 65 && event.charCode <= 90 || event.charCode >= 97 && event.charCode <= 122 || event.charCode==32;
    });
    //Validación para solo presionar enter y borrar
    $('.date').keypress(function() {
        return event.charCode == 32 || event.charCode == 127;
    });

    //datatable español
    var español = {
        "sProcessing":     "Procesando...",
        "sLengthMenu":     "Mostrar _MENU_ registros",
        "sZeroRecords":    "No se encontraron resultados",
        "sEmptyTable":     "Ningún resultado disponible en esta tabla",
        "sInfo":           "Resultados del _START_ al _END_ de un total de _TOTAL_ registros",
        "sInfoEmpty":      "No hay resultados",
        "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
        "sInfoPostFix":    "",
        "sSearch":         "Buscar :",
        "sUrl":            "",
        "sInfoThousands":  ",",
        "sLoadingRecords": "Cargando...",
        "oPaginate": {
            "sFirst":    "Primero",
            "sLast":     "Último",
            "sNext":     "Siguiente",
            "sPrevious": "Anterior"
        },
        "oAria": {
            "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
        }
    }

    //datatable export
    if ($('#tablaExport').length) {
        $('#tablaExport').DataTable({
            dom: 'Bfrtip',
            buttons: ['excel', 'pdf'],
            "language": español
        });
    }

    //datatable normal
    if ($('#tabla').length) {
        $('#tabla').DataTable({
            "language": español
        });
    }

    //datepicker material
    if ($('.date').length) {
        $('.date').bootstrapMaterialDatePicker({
            time: false,
            cancelText: 'Cancelar',
            clearText: 'Limpiar',
            format: 'YYYY-M-D',
            minDate : new Date()
        });
    }

    //multiselect
    if ($('.multiselect').length) {
        $('.multiselect').multiselect({
            buttonClass: 'form-control',
            buttonWidth: '100%',
            maxHeight: 200,
            includeSelectAllOption: false,
            selectAllText: 'Seleccionar Todas',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Buscar',
            includeFilterClearBtn: true,
            nonSelectedText: 'Seleccione',
            nSelectedText: 'Selecionados',
            allSelectedText: 'Todos Selecionados',
            numberDisplayed: 2,
            disableIfEmpty: true,
            disabledText: 'Seleccione',
            templates: {
                button: '<button type="button" style="text-align: left;" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> <b class="caret" style="text-align: right;"></b></button>',
                ul: '<ul class="multiselect-container dropdown-menu"></ul>',
                filter: '<li class="multiselect-item multiselect-filter"><div class="input-group"><span class="input-group-addon"><i class="fa fa-search"></i></span><input class="form-control multiselect-search" type="text" /></div></li>',
                filterClearBtn: '<span class="input-group-btn"><button class="btn btn-default multiselect-clear-filter" type="button"><i class="fa fa-close"></i></button></span>',
                li: '<li style="margin-left: -25px;"><a tabindex="0"><label style="color: #000; width: 100%;"></label></a></li>',
                divider: '<li class="multiselect-item divider"></li>',
                liGroup: '<li class="multiselect-item multiselect-group"><label></label></li>',
                resetButton: '<li class="multiselect-reset text-center"><div class="input-group"><a class="btn btn-default btn-block"></a></div></li>'
            }
        });
    }

    if ($('#multiselectCouples').length) {
        $('#multiselectCouples').multiselect({
            buttonClass: 'form-control',
            buttonWidth: '100%',
            maxHeight: 200,
            includeSelectAllOption: false,
            selectAllText: 'Seleccionar Todas',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Buscar',
            includeFilterClearBtn: true,
            nonSelectedText: 'Seleccione',
            nSelectedText: 'Selecionados',
            allSelectedText: 'Todos Selecionados',
            numberDisplayed: 2,
            disableIfEmpty: true,
            disabledText: 'Seleccione',
            templates: {
                button: '<button type="button" style="text-align: left;" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> <b class="caret" style="text-align: right;"></b></button>',
                ul: '<ul class="multiselect-container dropdown-menu couples"></ul>',
                filter: '<li class="multiselect-item multiselect-filter"><div class="input-group"><span class="input-group-addon"><i class="fa fa-search"></i></span><input class="form-control multiselect-search" type="text" /></div></li>',
                filterClearBtn: '<span class="input-group-btn"><button class="btn btn-default multiselect-clear-filter" type="button"><i class="fa fa-close"></i></button></span>',
                li: '<li style="margin-left: -25px;"><a tabindex="0"><label style="color: #000; width: 100%;"></label></a></li>',
                divider: '<li class="multiselect-item divider"></li>',
                liGroup: '<li class="multiselect-item multiselect-group"><label></label></li>',
                resetButton: '<li class="multiselect-reset text-center"><div class="input-group"><a class="btn btn-default btn-block"></a></div></li>'
            },
            onChange : function(option, checked) {
                var selectedOptions = $("#multiselectCouples option:selected");

                if (selectedOptions.length >= 2) {
                    var nonSelectedOptions = $('#multiselectCouples option').filter(function() {
                        return !$(this).is(':selected');
                    });

                    nonSelectedOptions.each(function() {
                        var input = $('.couples input[value="' + $(this).val() + '"]');
                        input.prop('disabled', true);
                        input.parent('li').addClass('disabled');
                    });
                }
                else {
                    $('#multiselectCouples option').each(function() {
                        var input = $('.couples input[value="' + $(this).val() + '"]');
                        input.prop('disabled', false);
                        input.parent('li').addClass('disabled');
                    });
                }
            }
        });
    }

    if ($('#multiselectCouples2').length) {
        $('#multiselectCouples2').multiselect({
            buttonClass: 'form-control',
            buttonWidth: '100%',
            maxHeight: 200,
            includeSelectAllOption: false,
            selectAllText: 'Seleccionar Todas',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Buscar',
            includeFilterClearBtn: true,
            nonSelectedText: 'Seleccione',
            nSelectedText: 'Selecionados',
            allSelectedText: 'Todos Selecionados',
            numberDisplayed: 2,
            disableIfEmpty: true,
            disabledText: 'Seleccione',
            templates: {
                button: '<button type="button" style="text-align: left;" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> <b class="caret" style="text-align: right;"></b></button>',
                ul: '<ul class="multiselect-container dropdown-menu couples2"></ul>',
                filter: '<li class="multiselect-item multiselect-filter"><div class="input-group"><span class="input-group-addon"><i class="fa fa-search"></i></span><input class="form-control multiselect-search" type="text" /></div></li>',
                filterClearBtn: '<span class="input-group-btn"><button class="btn btn-default multiselect-clear-filter" type="button"><i class="fa fa-close"></i></button></span>',
                li: '<li style="margin-left: -25px;"><a tabindex="0"><label style="color: #000; width: 100%;"></label></a></li>',
                divider: '<li class="multiselect-item divider"></li>',
                liGroup: '<li class="multiselect-item multiselect-group"><label></label></li>',
                resetButton: '<li class="multiselect-reset text-center"><div class="input-group"><a class="btn btn-default btn-block"></a></div></li>'
            },
            onChange : function(option, checked) {
                var selectedOptions = $("#multiselectCouples2 option:selected");

                if (selectedOptions.length >= 2) {
                    var nonSelectedOptions = $('#multiselectCouples2 option').filter(function() {
                        return !$(this).is(':selected');
                    });

                    nonSelectedOptions.each(function() {
                        var input = $('.couples2 input[value="' + $(this).val() + '"]');
                        input.prop('disabled', true);
                        input.parent('li').addClass('disabled');
                    });
                }
                else {
                    $('#multiselectCouples2 option').each(function() {
                        var input = $('.couples2 input[value="' + $(this).val() + '"]');
                        input.prop('disabled', false);
                        input.parent('li').addClass('disabled');
                    });
                }
            }
        });
    }

    //touchspin para los campos numericos
    if ($('.number').length) {
        $(".number").TouchSpin({
            min: 1,
            max: 99999999999,
            buttondown_class: 'btn btn-primary',
            buttonup_class: 'btn btn-primary'
        });
    }

    if ($('.numberTournament').length) {
        $(".numberTournament").TouchSpin({
            min: 2,
            max: 6,
            buttondown_class: 'btn btn-primary',
            buttonup_class: 'btn btn-primary'
        });
    }

    if ($('.numberCouplesTournament').length) {
        $(".numberCouplesTournament").TouchSpin({
            min: 6,
            max: 12,
            buttondown_class: 'btn btn-primary',
            buttonup_class: 'btn btn-primary'
        });
    }

    $('#maxGroup').change(function() {
        var numberGroup=$(this).val();
        var minimo=numberGroup*3;
        var maximo=numberGroup*6;
        $(".numberCouplesTournament").trigger("touchspin.updatesettings", {
            min: minimo,
            max: maximo
        });
    });

    if ($('.numberPoint').length) {
        $(".numberPoint").TouchSpin({
            min: 0,
            max: 2,
            buttondown_class: 'btn btn-primary',
            buttonup_class: 'btn btn-primary'
        });
    }

    //dropify para input file más personalizado
    if ($('.dropify').length) {
        $('.dropify').dropify({
            messages: {
                default: 'Arrastre y suelte una imagen o da click para seleccionarla',
                replace: 'Arrastre y suelte una imagen o haga click para reemplazar',
                remove: 'Remover',
                error: 'Lo sentimos, el archivo es demasiado grande'
            },
            error: {
                'fileSize': 'El tamaño del archivo es demasiado grande ({{ value }} máximo).',
                'minWidth': 'El ancho de la imagen es demasiado pequeño ({{ value }}}px mínimo).',
                'maxWidth': 'El ancho de la imagen es demasiado grande ({{ value }}}px máximo).',
                'minHeight': 'La altura de la imagen es demasiado pequeña ({{ value }}}px mínimo).',
                'maxHeight': 'La altura de la imagen es demasiado grande ({{ value }}px máximo).',
                'imageFormat': 'El formato de imagen no está permitido (Debe ser {{ value }}).'
            }
        });
    }
});

//funciones para mostrar modal de usuario
function showUser(slug) {
    $.ajax({
        url: '/usuarios/'+slug,
        dataType: 'html',
    })
    .done(function(resultado) {
        var obj=JSON.parse(resultado);
        $('#photoUser').attr('src', '/admins/img/users/'+obj.photo);
        $('#nameUser').text(obj.name+" "+obj.lastname);
        $('#emailUser').text(obj.email);
        $('#stateUser').html(obj.state);
        $("#showUser").modal();
    });
};

function showClub(slug) {
    $.ajax({
        url: '/clubes/'+slug,
        dataType: 'html'
    })
    .done(function(resultado) {
        var obj=JSON.parse(resultado);
        $('#nameClub').text(obj.name);
        $("#showClub").modal();
    });
};

//funciones para preguntar al eliminar
function deleteUser(slug) {
    $("#deleteUser").modal();
    $('#formDeleteUser').attr('action', '/usuarios/' + slug);
}

function deleteGamer(slug) {
    $("#deleteGamer").modal();
    $('#formDeleteGamer').attr('action', '/jugadores/' + slug);
}

function deleteTournament(slug) {
    $("#deleteTournament").modal();
    $('#formDeleteTournament').attr('action', '/torneos/' + slug);
}

function deleteClub(slug) {
    $("#deleteClub").modal();
    $('#formDeleteClub').attr('action', '/clubes/' + slug);
}

function deleteGame(slug) {
    $("#deleteGame").modal();
    $('#formDeleteGame').attr('action', '/juegos/' + slug);
}

function deleteCouple(id) {
    $("#deleteCouple").modal();
    $('#formDeleteCouple').attr('action', '/parejas/' + id);
}

// Función para agregar parejas al torneo
function addCouples(slug) {
    $.ajax({
        url: '/parejas/'+slug+'/agregar',
        dataType: 'html',
    })
    .done(function(resultado) {
        $("#multiselectCouples option").remove();
        var obj=JSON.parse(resultado);
        if (obj[0].cupos>0) {
            for (var i=obj.length-1; i>=0; i--) {
                $('#multiselectCouples').append($('<option>', {
                    value: obj[i].slug,
                    text: obj[i].nombre_completo
                }));
            }
            $('#multiselectCouples').multiselect('rebuild');
            $('#formAddCouples').attr('action', '/parejas/' + slug + '/agregar-normal');
            $('#formAddCouplesFull').css('display', 'none');
            $('#formAddCouples').css('display', 'block');
        } else {
            $('#formAddCouples').css('display', 'none');
            $('#formAddCouplesFull').css('display', 'block');
        }
        $("#addCouples").modal();
    });
}

// Función para agregar parejas al torneo
function addCouples2(slug) {
    $.ajax({
        url: '/parejas/'+slug+'/agregar',
        dataType: 'html',
    })
    .done(function(resultado) {
        $("#multiselectCouples2 option").remove();
        var obj=JSON.parse(resultado);
        if (obj[0].cupos>0) {
            for (var i=obj.length-1; i>=0; i--) {
                $('#multiselectCouples2').append($('<option>', {
                    value: obj[i].slug,
                    text: obj[i].nombre_completo
                }));
            }
            $('#multiselectCouples2').multiselect('rebuild');
            $('#formAddCouples2').attr('action', '/parejas/' + slug + '/agregar-club');
            $('#formAddCouplesFull2').css('display', 'none');
            $('#formAddCouples2').css('display', 'block');
        } else {
            $('#formAddCouples2').css('display', 'none');
            $('#formAddCouplesFull2').css('display', 'block');
        }
        $("#addCouples2").modal();
    });
}

function addGame(slug) {
    $.ajax({
        url: '/torneos/'+slug+'/juego',
        dataType: 'html'
    })
    .done(function(resultado) {
        var obj=JSON.parse(resultado);
        $('#formAddGame').attr('action', '/torneos/' + slug + '/juego');
        $('#couple1Game').html(obj.couple1);
        $('#couple2Game').html(obj.couple2);
        $('#points1Game').val(obj.points1);
        $('#points2Game').val(obj.points2);
        $("#addGame").modal();
    });
};

function addGameBack(slug) {
    $.ajax({
        url: '/torneos/'+slug+'/juego/retirada',
        dataType: 'html'
    })
    .done(function(resultado) {
        var obj=JSON.parse(resultado);
        $('#formAddGameBack').attr('action', '/torneos/' + slug + '/juego/retirada');
        $('#couplesWinBack option').remove();
        $('#couplesWinBack').append($('<option>', {
            value: "",
            text: "Seleccione"
        })).append($('<option>', {
            value: obj.idCouple1,
            text: obj.couple1
        })).append($('<option>', {
            value: obj.idCouple2,
            text: obj.couple2
        }));
        $("#addGameBack").modal();
    });
};

function showGame(slug) {
    $.ajax({
        url: '/juegos/'+slug,
        dataType: 'html'
    })
    .done(function(resultado) {
        var obj=JSON.parse(resultado);
        $('#typeGame').text(obj.type);
        $('#stateGame').html(obj.state);
        $('#couple1Game').html(obj.couple1);
        $('#couple2Game').html(obj.couple2);
        $('#points1Game').text(obj.points1);
        $('#points2Game').text(obj.points2);
        $("#showGame").modal();
    });
};

function addGroup(slugTournament, idGamerTournament) {
    $('#addGroupAlert').addClass('d-none');
    $.ajax({
        url: '/torneos/agregar/grupo',
        type: 'POST',
        dataType: 'html',
        data: {tournament: slugTournament, gamerTournament: idGamerTournament},
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    })
    .done(function(resultado) {
        $("#groupsAvailable option").remove();
        var obj=JSON.parse(resultado);

        $('#groupsAvailable').append($('<option>', {
            value: "",
            text: "Seleccione"
        }));

        if (obj.length>0) {
            for (var i=0; i<obj.length; i++) {
                $('#groupsAvailable').append($('<option>', {
                    value: obj[i].group,
                    text: obj[i].name
                }));
            }
            $('input[name="gamerTournament"]').val(idGamerTournament);
        }

        if ((obj.status===false && obj.msj!="Error") || obj.length>0) {
            if (obj.status===false) {
                $('#addGroupAlert').removeClass('d-none');
            }
            $('#addGroup').modal();
        }
    });
};

function changeGroup(slugTournament, idGamerTournament, group) {
    $('#changeGroupAlert').addClass('d-none');
    $.ajax({
        url: '/torneos/cambiar/grupo',
        type: 'POST',
        dataType: 'html',
        data: {tournament: slugTournament, gamerTournament: idGamerTournament},
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    })
    .done(function(resultado) {
        $("#groupsChangeAvailable option").remove();
        var obj=JSON.parse(resultado);

        $('#groupNow').val(group);

        $('#groupsChangeAvailable').append($('<option>', {
            value: "",
            text: "Seleccione"
        }));

        if (obj.length>0) {
            for (var i=0; i<obj.length; i++) {
                $('#groupsChangeAvailable').append($('<option>', {
                    value: obj[i].group,
                    text: obj[i].name
                }));
            }
            $('input[name="gamerTournamentChange"]').val(idGamerTournament);
        }

        if ((obj.status===false && obj.msj!="Error") || obj.length>0) {
            if (obj.status===false) {
                $('#changeGroupAlert').removeClass('d-none');
            }
            $("#changeGroup").modal();
        }
    });
};